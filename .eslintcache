[{"D:\\Github\\LoginSPA\\src\\index.js":"1","D:\\Github\\LoginSPA\\src\\App.js":"2","D:\\Github\\LoginSPA\\src\\components\\Home\\Home.js":"3","D:\\Github\\LoginSPA\\src\\components\\Login\\Login.js":"4","D:\\Github\\LoginSPA\\src\\components\\MainHeader\\MainHeader.js":"5","D:\\Github\\LoginSPA\\src\\components\\MainHeader\\Navigation.js":"6","D:\\Github\\LoginSPA\\src\\components\\UI\\Card\\Card.js":"7","D:\\Github\\LoginSPA\\src\\components\\UI\\Button\\Button.js":"8"},{"size":214,"mtime":1664971766972,"results":"9","hashOfConfig":"10"},{"size":835,"mtime":1664977159193,"results":"11","hashOfConfig":"10"},{"size":264,"mtime":1664971766969,"results":"12","hashOfConfig":"10"},{"size":4278,"mtime":1664977032684,"results":"13","hashOfConfig":"10"},{"size":383,"mtime":1664971766970,"results":"14","hashOfConfig":"10"},{"size":600,"mtime":1664971766970,"results":"15","hashOfConfig":"10"},{"size":229,"mtime":1664971766971,"results":"16","hashOfConfig":"10"},{"size":371,"mtime":1664971766971,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"27x0k8",{"filePath":"21","messages":"22","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"23","messages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"25","messages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"20"},{"filePath":"28","messages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"30","messages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"32","messages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"34","messages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"D:\\Github\\LoginSPA\\src\\index.js",[],["36","37"],"D:\\Github\\LoginSPA\\src\\App.js",[],"D:\\Github\\LoginSPA\\src\\components\\Home\\Home.js",[],"D:\\Github\\LoginSPA\\src\\components\\Login\\Login.js",["38"],"import React, { useState, useEffect, useReducer } from 'react';\r\n\r\nimport Card from '../UI/Card/Card';\r\nimport classes from './Login.module.css';\r\nimport Button from '../UI/Button/Button';\r\n\r\nconst Login = (props) => {\r\n    // const [enteredEmail, setEnteredEmail] = useState('');\r\n    // const [emailIsValid, setEmailIsValid] = useState();\r\n    const [enteredPassword, setEnteredPassword] = useState('');\r\n    const [passwordIsValid, setPasswordIsValid] = useState();\r\n    const [formIsValid, setFormIsValid] = useState(false);\r\n\r\n    //: useReducer\r\n    const [emailState, dispatchEmail] = useReducer(\r\n        (state, action) => {\r\n            if (action.type === 'USER_INPUT') {\r\n                return { value: action.val, isValid: action.val.includes('@') };\r\n            }\r\n            if (action.type === 'INPUT_BLUR') {\r\n                return { value: '', isValid: false };\r\n            }\r\n            return { value:state.value, isValid: state.value.includes('@') };\r\n        },\r\n        { value: '', isValid: null },\r\n    );\r\n\r\n    //:useEffect\r\n    // useEffect(() => {\r\n    //     const identifier = setTimeout(() => {\r\n    //         //'settimeout return an timeoutID of setTimeout\r\n    //         setFormIsValid(\r\n    //             enteredEmail.includes('@') && enteredPassword.trim().length > 6,\r\n    //         );\r\n    //     }, 500); //' set a timer for every key stroke\r\n    //     return () => {\r\n    //         clearTimeout(identifier); //' remove the timer set, hence we are left with the latest timer.\r\n    //     }; //' cleanup function, this function runs before the every new sideeffects exectuction(except for the first time)\r\n    // }, [setFormIsValid, enteredEmail, enteredPassword]); //'either of the variables in the dependency array changes will lead to the function to re-render\r\n\r\n    const emailChangeHandler = (event) => {\r\n        // setEnteredEmail(event.target.value);\r\n        dispatchEmail({type:\"USER_INPUT'.\",val:event.target.value})\r\n    };\r\n\r\n    const passwordChangeHandler = (event) => {\r\n        setEnteredPassword(event.target.value);\r\n\r\n        setFormIsValid(\r\n            event.target.value.trim().length > 6 &&  emailState.isValid //.useReducer\r\n        );\r\n    };\r\n\r\n    const validateEmailHandler = () => {\r\n        // setEmailIsValid(emailState.isValid);\r\n        dispatchEmail({type:'INPUT_BLUR'})\r\n    };\r\n\r\n    const validatePasswordHandler = () => {\r\n        setPasswordIsValid(enteredPassword.trim().length > 6);\r\n    };\r\n\r\n    const submitHandler = (event) => {\r\n        event.preventDefault();\r\n        props.onLogin(emailState.value, enteredPassword);\r\n    };\r\n\r\n    return (\r\n        <Card className={classes.login}>\r\n            <form onSubmit={submitHandler}>\r\n                <div\r\n                    className={`${classes.control} ${\r\n                        emailState.isValid === false ? classes.invalid : ''\r\n                    }`}\r\n                >\r\n                    <label htmlFor=\"email\">E-Mail</label>\r\n                    <input\r\n                        type=\"email\"\r\n                        id=\"email\"\r\n                        value={emailState.value}\r\n                        onChange={emailChangeHandler}\r\n                        onBlur={validateEmailHandler}\r\n                    />\r\n                </div>\r\n                <div\r\n                    className={`${classes.control} ${\r\n                        passwordIsValid === false ? classes.invalid : ''\r\n                    }`}\r\n                >\r\n                    <label htmlFor=\"password\">Password</label>\r\n                    <input\r\n                        type=\"password\"\r\n                        id=\"password\"\r\n                        value={enteredPassword}\r\n                        onChange={passwordChangeHandler}\r\n                        onBlur={validatePasswordHandler}\r\n                    />\r\n                </div>\r\n                <div className={classes.actions}>\r\n                    <Button\r\n                        type=\"submit\"\r\n                        className={classes.btn}\r\n                        disabled={!formIsValid}\r\n                    >\r\n                        Login\r\n                    </Button>\r\n                </div>\r\n            </form>\r\n        </Card>\r\n    );\r\n};\r\n\r\nexport default Login;\r\n","D:\\Github\\LoginSPA\\src\\components\\MainHeader\\MainHeader.js",[],"D:\\Github\\LoginSPA\\src\\components\\MainHeader\\Navigation.js",[],"D:\\Github\\LoginSPA\\src\\components\\UI\\Card\\Card.js",[],"D:\\Github\\LoginSPA\\src\\components\\UI\\Button\\Button.js",[],{"ruleId":"39","replacedBy":"40"},{"ruleId":"41","replacedBy":"42"},{"ruleId":"43","severity":1,"message":"44","line":1,"column":27,"nodeType":"45","messageId":"46","endLine":1,"endColumn":36},"no-native-reassign",["47"],"no-negated-in-lhs",["48"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]